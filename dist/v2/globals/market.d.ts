// Generated by scripts/lib/code-synthesizer.mjs

// - - - - - - - - - - - - - - - - - - - -
//            @method {get}
// - - - - - - - - - - - - - - - - - - - -
/*!
 * ESI endpoint: get:/characters/{character_id}/orders/
 */
/**
 * Valid order range, numbers are ranges in jumps
 */
type GetCharactersCharacterIdOrdersRange =
  | "1"
  | "10"
  | "2"
  | "20"
  | "3"
  | "30"
  | "4"
  | "40"
  | "5"
  | "region"
  | "solarsystem"
  | "station";
/**
 * 200 ok array
 *
 * @maxItems 305
 */
type GetCharactersCharacterIdOrdersOk = GetCharactersCharacterIdOrders_200Ok[];

/**
 * 200 ok object
 */
interface GetCharactersCharacterIdOrders_200Ok {
  /**
   * Number of days for which order is valid (starting from the issued date). An order expires at time issued + duration
   */
  duration: number;
  /**
   * For buy orders, the amount of ISK in escrow
   */
  escrow?: number;
  /**
   * True if the order is a bid (buy) order
   */
  is_buy_order?: boolean;
  /**
   * Signifies whether the buy/sell order was placed on behalf of a corporation.
   */
  is_corporation: boolean;
  /**
   * Date and time when this order was issued
   */
  issued: string;
  /**
   * ID of the location where order was placed
   */
  location_id: number;
  /**
   * For buy orders, the minimum quantity that will be accepted in a matching sell order
   */
  min_volume?: number;
  /**
   * Unique order ID
   */
  order_id: number;
  /**
   * Cost per unit for this order
   */
  price: number;
  range: GetCharactersCharacterIdOrdersRange;
  /**
   * ID of the region where order was placed
   */
  region_id: number;
  type_id: number;
  /**
   * Quantity of items still required or offered
   */
  volume_remain: number;
  /**
   * Quantity of items required or offered at time order was placed
   */
  volume_total: number;
  [k: string]: unknown | undefined;
}

/*!
 * ESI endpoint: get:/characters/{character_id}/orders/history/
 */
/**
 * Valid order range, numbers are ranges in jumps
 */
type GetCharactersCharacterIdOrdersHistoryRange =
  | "1"
  | "10"
  | "2"
  | "20"
  | "3"
  | "30"
  | "4"
  | "40"
  | "5"
  | "region"
  | "solarsystem"
  | "station";
/**
 * Current order state
 */
type GetCharactersCharacterIdOrdersHistoryState = "cancelled" | "expired";
/**
 * 200 ok array
 *
 * @maxItems 1000
 */
type GetCharactersCharacterIdOrdersHistoryOk = GetCharactersCharacterIdOrdersHistory_200Ok[];

/**
 * 200 ok object
 */
interface GetCharactersCharacterIdOrdersHistory_200Ok {
  /**
   * Number of days the order was valid for (starting from the issued date). An order expires at time issued + duration
   */
  duration: number;
  /**
   * For buy orders, the amount of ISK in escrow
   */
  escrow?: number;
  /**
   * True if the order is a bid (buy) order
   */
  is_buy_order?: boolean;
  /**
   * Signifies whether the buy/sell order was placed on behalf of a corporation.
   */
  is_corporation: boolean;
  /**
   * Date and time when this order was issued
   */
  issued: string;
  /**
   * ID of the location where order was placed
   */
  location_id: number;
  /**
   * For buy orders, the minimum quantity that will be accepted in a matching sell order
   */
  min_volume?: number;
  /**
   * Unique order ID
   */
  order_id: number;
  /**
   * Cost per unit for this order
   */
  price: number;
  range: GetCharactersCharacterIdOrdersHistoryRange;
  /**
   * ID of the region where order was placed
   */
  region_id: number;
  state: GetCharactersCharacterIdOrdersHistoryState;
  type_id: number;
  /**
   * Quantity of items still required or offered
   */
  volume_remain: number;
  /**
   * Quantity of items required or offered at time order was placed
   */
  volume_total: number;
  [k: string]: unknown | undefined;
}

/*!
 * ESI endpoint: get:/corporations/{corporation_id}/orders/
 */
/**
 * Valid order range, numbers are ranges in jumps
 */
type GetCorporationsCorporationIdOrdersRange =
  | "1"
  | "10"
  | "2"
  | "20"
  | "3"
  | "30"
  | "4"
  | "40"
  | "5"
  | "region"
  | "solarsystem"
  | "station";
/**
 * 200 ok array
 *
 * @maxItems 1000
 */
type GetCorporationsCorporationIdOrdersOk = GetCorporationsCorporationIdOrders_200Ok[];

/**
 * 200 ok object
 */
interface GetCorporationsCorporationIdOrders_200Ok {
  /**
   * Number of days for which order is valid (starting from the issued date). An order expires at time issued + duration
   */
  duration: number;
  /**
   * For buy orders, the amount of ISK in escrow
   */
  escrow?: number;
  /**
   * True if the order is a bid (buy) order
   */
  is_buy_order?: boolean;
  /**
   * Date and time when this order was issued
   */
  issued: string;
  /**
   * The character who issued this order
   */
  issued_by: number;
  /**
   * ID of the location where order was placed
   */
  location_id: number;
  /**
   * For buy orders, the minimum quantity that will be accepted in a matching sell order
   */
  min_volume?: number;
  /**
   * Unique order ID
   */
  order_id: number;
  /**
   * Cost per unit for this order
   */
  price: number;
  range: GetCorporationsCorporationIdOrdersRange;
  /**
   * ID of the region where order was placed
   */
  region_id: number;
  type_id: number;
  /**
   * Quantity of items still required or offered
   */
  volume_remain: number;
  /**
   * Quantity of items required or offered at time order was placed
   */
  volume_total: number;
  /**
   * The corporation wallet division used for this order.
   */
  wallet_division: number;
  [k: string]: unknown | undefined;
}

/*!
 * ESI endpoint: get:/corporations/{corporation_id}/orders/history/
 */
/**
 * Valid order range, numbers are ranges in jumps
 */
type GetCorporationsCorporationIdOrdersHistoryRange =
  | "1"
  | "10"
  | "2"
  | "20"
  | "3"
  | "30"
  | "4"
  | "40"
  | "5"
  | "region"
  | "solarsystem"
  | "station";
/**
 * Current order state
 */
type GetCorporationsCorporationIdOrdersHistoryState = "cancelled" | "expired";
/**
 * 200 ok array
 *
 * @maxItems 1000
 */
type GetCorporationsCorporationIdOrdersHistoryOk = GetCorporationsCorporationIdOrdersHistory_200Ok[];

/**
 * 200 ok object
 */
interface GetCorporationsCorporationIdOrdersHistory_200Ok {
  /**
   * Number of days the order was valid for (starting from the issued date). An order expires at time issued + duration
   */
  duration: number;
  /**
   * For buy orders, the amount of ISK in escrow
   */
  escrow?: number;
  /**
   * True if the order is a bid (buy) order
   */
  is_buy_order?: boolean;
  /**
   * Date and time when this order was issued
   */
  issued: string;
  /**
   * The character who issued this order
   */
  issued_by?: number;
  /**
   * ID of the location where order was placed
   */
  location_id: number;
  /**
   * For buy orders, the minimum quantity that will be accepted in a matching sell order
   */
  min_volume?: number;
  /**
   * Unique order ID
   */
  order_id: number;
  /**
   * Cost per unit for this order
   */
  price: number;
  range: GetCorporationsCorporationIdOrdersHistoryRange;
  /**
   * ID of the region where order was placed
   */
  region_id: number;
  state: GetCorporationsCorporationIdOrdersHistoryState;
  type_id: number;
  /**
   * Quantity of items still required or offered
   */
  volume_remain: number;
  /**
   * Quantity of items required or offered at time order was placed
   */
  volume_total: number;
  /**
   * The corporation wallet division used for this order
   */
  wallet_division: number;
  [k: string]: unknown | undefined;
}

/*!
 * ESI endpoint: get:/markets/groups/
 */
/**
 * 200 ok array
 *
 * @maxItems 5000
 */
type GetMarketsGroupsOk = number[];

/*!
 * ESI endpoint: get:/markets/groups/{market_group_id}/
 */

/**
 * 200 ok object
 */
interface GetMarketsGroupsMarketGroupIdOk {
  /**
   * description string
   */
  description: string;
  /**
   * market_group_id integer
   */
  market_group_id: number;
  /**
   * name string
   */
  name: string;
  /**
   * parent_group_id integer
   */
  parent_group_id?: number;
  types: number[];
  [k: string]: unknown | undefined;
}

/*!
 * ESI endpoint: get:/markets/prices/
 */
/**
 * 200 ok array
 *
 * @maxItems 20000
 */
type GetMarketsPricesOk = GetMarketsPrices_200Ok[];

/**
 * 200 ok object
 */
interface GetMarketsPrices_200Ok {
  /**
   * adjusted_price number
   */
  adjusted_price?: number;
  /**
   * average_price number
   */
  average_price?: number;
  type_id: number;
  [k: string]: unknown | undefined;
}

/*!
 * ESI endpoint: get:/markets/structures/{structure_id}/
 */
/**
 * range string
 */
type GetMarketsStructuresStructureIdRange =
  | "station"
  | "region"
  | "solarsystem"
  | "1"
  | "2"
  | "3"
  | "4"
  | "5"
  | "10"
  | "20"
  | "30"
  | "40";
/**
 * 200 ok array
 *
 * @maxItems 1000
 */
type GetMarketsStructuresStructureIdOk = GetMarketsStructuresStructureId_200Ok[];

/**
 * 200 ok object
 */
interface GetMarketsStructuresStructureId_200Ok {
  /**
   * duration integer
   */
  duration: number;
  /**
   * is_buy_order boolean
   */
  is_buy_order: boolean;
  /**
   * issued string
   */
  issued: string;
  /**
   * location_id integer
   */
  location_id: number;
  /**
   * min_volume integer
   */
  min_volume: number;
  /**
   * order_id integer
   */
  order_id: number;
  /**
   * price number
   */
  price: number;
  range: GetMarketsStructuresStructureIdRange;
  type_id: number;
  /**
   * volume_remain integer
   */
  volume_remain: number;
  /**
   * volume_total integer
   */
  volume_total: number;
  [k: string]: unknown | undefined;
}

/*!
 * ESI endpoint: get:/markets/{region_id}/history/
 */
/**
 * 200 ok array
 *
 * @maxItems 500
 */
type GetMarketsRegionIdHistoryOk = GetMarketsRegionIdHistory_200Ok[];

/**
 * 200 ok object
 */
interface GetMarketsRegionIdHistory_200Ok {
  /**
   * average number
   */
  average: number;
  /**
   * The date of this historical statistic entry
   */
  date: string;
  /**
   * highest number
   */
  highest: number;
  /**
   * lowest number
   */
  lowest: number;
  /**
   * Total number of orders happened that day
   */
  order_count: number;
  /**
   * Total
   */
  volume: number;
  [k: string]: unknown | undefined;
}

/*!
 * ESI endpoint: get:/markets/{region_id}/orders/
 */
/**
 * range string
 */
type GetMarketsRegionIdOrdersRange =
  | "station"
  | "region"
  | "solarsystem"
  | "1"
  | "2"
  | "3"
  | "4"
  | "5"
  | "10"
  | "20"
  | "30"
  | "40";
/**
 * 200 ok array
 *
 * @maxItems 1000
 */
type GetMarketsRegionIdOrdersOk = GetMarketsRegionIdOrders_200Ok[];

/**
 * 200 ok object
 */
interface GetMarketsRegionIdOrders_200Ok {
  /**
   * duration integer
   */
  duration: number;
  /**
   * is_buy_order boolean
   */
  is_buy_order: boolean;
  /**
   * issued string
   */
  issued: string;
  /**
   * location_id integer
   */
  location_id: number;
  /**
   * min_volume integer
   */
  min_volume: number;
  /**
   * order_id integer
   */
  order_id: number;
  /**
   * price number
   */
  price: number;
  range: GetMarketsRegionIdOrdersRange;
  /**
   * The solar system this order was placed
   */
  system_id: number;
  type_id: number;
  /**
   * volume_remain integer
   */
  volume_remain: number;
  /**
   * volume_total integer
   */
  volume_total: number;
  [k: string]: unknown | undefined;
}

/*!
 * ESI endpoint: get:/markets/{region_id}/types/
 */
/**
 * 200 ok array
 *
 * @maxItems 1000
 */
type GetMarketsRegionIdTypesOk = number[];
